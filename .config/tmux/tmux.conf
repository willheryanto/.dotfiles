# : << EOF
set -g default-terminal "${TERM}"

set -sg escape-time 0

# prefix
set -g prefix2 C-a

# mouse mode
set -g mouse on

# re-configure default map to current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# edit configuration
bind e new-window -n "${TMUX_CONF_PATH}" sh -c "${EDITOR} ${TMUX_CONF_PATH} && tmux source ${TMUX_CONF_PATH} && tmux display '${TMUX_CONF_PATH}' sourced"
bind r source-file "${TMUX_CONF_PATH}" \; display "'${TMUX_CONF_PATH}' sourced"

# split current window horizontally
bind - split-window -v -c "#{pane_current_path}"
# split current window vertically
bind _ split-window -h -c "#{pane_current_path}"

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# copy mode
bind Enter copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# buffers
bind b list-buffers     # list paste buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind P choose-buffer    # choose which buffer to paste from

# check tpm
run "cut -c3- ${TMUX_CONF_PATH} | sh -s _check_tpm"

# plugins
set -g @plugin 'tmux-plugins/tpm'

run '~/.tmux/plugins/tpm/tpm'

# EOF
#
# # exit the script if any statement returns a non-true return value
# set -e
#
# TMUX_PLUGIN_PATH=${TMUX_PLUGIN_PATH:-~/.tmux/plugins}
# TMUX_PLUGIN_MANAGER_PATH="${TMUX_PLUGIN_PATH}/tpm"
# 
# _check_tpm() {
#   if ! type git > /dev/null; then
#     "<git> need to be installed"
#     exit 1
#   fi
# 
#   if [[ ! -d ${TMUX_PLUGIN_MANAGER_PATH} ]]; then
#     git clone https://github.com/tmux-plugins/tpm ${TMUX_PLUGIN_MANAGER_PATH}
#   fi
# }
#
# "$@"
